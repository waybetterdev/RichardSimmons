# Description:
#   Allows tasks (TODOs) to be added to Hubot
#
# Dependencies:
#   None
#
# Configuration:
#   None
#
# Commands:
#   hubot <username> will be <location> - Add a location
#   hubot location list locations - List the locations
#   hubot location delete <location number> - Delete a location
#
# Author:
#   Crofty

class locations
  constructor: (@robot) ->
    @cache = []
    @robot.brain.on 'loaded', =>
      if @robot.brain.data.locations
        @cache = @robot.brain.data.locations
  nextlocationNum: ->
    maxlocationNum = if @cache.length then Math.max.apply(Math,@cache.map (n) -> n.num) else 0
    maxlocationNum++
    maxlocationNum
  add: (locationString) ->
    location = {num: @nextlocationNum(), location: locationString}
    @cache.push location
    @robot.brain.data.locations = @cache
    location
  all: -> @cache
  deleteByNumber: (num) ->
    index = @cache.map((n) -> n.num).indexOf(parseInt(num))
    location = @cache.splice(index, 1)[0]
    @robot.brain.data.locations = @cache
    location

module.exports = (robot) ->
  locations = new locations robot

  robot.respond /(will be|add location) (.+?)$/i, (msg) ->
    location = locations.add msg.match[2]
    msg.send "location added: ##{location.num} - #{location.location}"

  robot.respond /(location list|list locations)/i, (msg) ->
    if locations.all().length > 0
      response = ""
      for location, num in locations.all()
        response += "##{location.num} - #{location.location}\n"
      msg.send response
    else
      msg.send "There are no locations"

  robot.respond /(location delete|delete location) #?(\d+)/i, (msg) ->
    locationNum = msg.match[2]
    location = locations.deleteByNumber locationNum
    msg.send "location deleted: ##{location.num} - #{location.location}"
